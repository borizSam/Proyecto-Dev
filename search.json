[
  {
    "objectID": "contact.html",
    "href": "contact.html",
    "title": "Ficha de Contacto",
    "section": "",
    "text": "Nombre: Boris Ivan\nCorreo Electr√≥nico: (dadapunk456@gmail.com) ‚úâÔ∏è\nDirecci√≥n: Barcelona,Barcelona üìç"
  },
  {
    "objectID": "contact.html#informaci√≥n-personal",
    "href": "contact.html#informaci√≥n-personal",
    "title": "Ficha de Contacto",
    "section": "",
    "text": "Nombre: Boris Ivan\nCorreo Electr√≥nico: (dadapunk456@gmail.com) ‚úâÔ∏è\nDirecci√≥n: Barcelona,Barcelona üìç"
  },
  {
    "objectID": "contact.html#redes-sociales",
    "href": "contact.html#redes-sociales",
    "title": "Ficha de Contacto",
    "section": "Redes Sociales",
    "text": "Redes Sociales\nCon√©ctame a trav√©s de mis redes sociales:\n\nLinkedIn üëî\nGitHub üê¶"
  },
  {
    "objectID": "contact.html#enviar-un-mensaje",
    "href": "contact.html#enviar-un-mensaje",
    "title": "Ficha de Contacto",
    "section": "Enviar un Mensaje",
    "text": "Enviar un Mensaje\nSi prefieres, tambi√©n puedes enviarme un mensaje directamente a trav√©s del siguiente correo:\nEmail: (dadapunk456@gmail.com) ‚úâÔ∏è\n¬°Saludos!"
  },
  {
    "objectID": "docker.html",
    "href": "docker.html",
    "title": "Docker",
    "section": "",
    "text": "Diagrama de Docker"
  },
  {
    "objectID": "docker.html#qu√©-es-docker",
    "href": "docker.html#qu√©-es-docker",
    "title": "Docker",
    "section": "1. ¬øQu√© es Docker?",
    "text": "1. ¬øQu√© es Docker?\n\nDocker es una plataforma que permite empaquetar, distribuir y ejecutar aplicaciones en contenedores.\nLos contenedores son entornos ligeros y aislados que incluyen todo lo necesario para ejecutar una aplicaci√≥n: c√≥digo, dependencias y configuraciones."
  },
  {
    "objectID": "docker.html#componentes-principales-de-docker",
    "href": "docker.html#componentes-principales-de-docker",
    "title": "Docker",
    "section": "2. Componentes principales de Docker",
    "text": "2. Componentes principales de Docker\n\nDocker Engine: El n√∫cleo de Docker que permite crear y ejecutar contenedores.\nIm√°genes: Plantillas inmutables que contienen el sistema operativo, dependencias y la aplicaci√≥n. Se construyen a partir de un archivo llamado Dockerfile.\nContenedores: Instancias en ejecuci√≥n basadas en im√°genes.\nDocker Hub: Un registro p√∫blico para compartir im√°genes de Docker.\nVolumes: Almacenamiento persistente para datos generados dentro de los contenedores."
  },
  {
    "objectID": "docker.html#conceptos-b√°sicos-de-uso",
    "href": "docker.html#conceptos-b√°sicos-de-uso",
    "title": "Docker",
    "section": "3. Conceptos b√°sicos de uso",
    "text": "3. Conceptos b√°sicos de uso\n\nDockerfile: Archivo que define c√≥mo se crea una imagen (instrucciones como FROM, COPY, RUN).\nComandos esenciales:\n\ndocker build: Crea una imagen a partir de un Dockerfile.\ndocker run: Ejecuta un contenedor basado en una imagen.\ndocker ps: Lista los contenedores en ejecuci√≥n.\ndocker stop: Detiene un contenedor en ejecuci√≥n.\ndocker pull y docker push: Descargar o subir im√°genes al registro."
  },
  {
    "objectID": "docker.html#ventajas-de-usar-docker",
    "href": "docker.html#ventajas-de-usar-docker",
    "title": "Docker",
    "section": "4. Ventajas de usar Docker",
    "text": "4. Ventajas de usar Docker\n\nPortabilidad: Los contenedores funcionan igual en cualquier sistema que soporte Docker.\nAislamiento: Los entornos son independientes, evitando conflictos entre aplicaciones.\nEscalabilidad: Ideal para entornos de microservicios y despliegues en la nube.\nRapidez: Contenedores m√°s ligeros que las m√°quinas virtuales tradicionales."
  },
  {
    "objectID": "docker.html#casos-de-uso-comunes",
    "href": "docker.html#casos-de-uso-comunes",
    "title": "Docker",
    "section": "5. Casos de uso comunes",
    "text": "5. Casos de uso comunes\n\nDesarrollo: Crear entornos consistentes para los desarrolladores.\nPruebas: Simular entornos de producci√≥n en local.\nDespliegue: Automatizar la distribuci√≥n de aplicaciones en servidores o nubes."
  },
  {
    "objectID": "docker.html#docker-hub",
    "href": "docker.html#docker-hub",
    "title": "Docker",
    "section": "¬øDocker Hub?",
    "text": "¬øDocker Hub?\nDocker Hub es una plataforma en l√≠nea para almacenar, compartir y descargar im√°genes de Docker. Es el registro oficial de Docker, con im√°genes p√∫blicas, privadas y oficiales mantenidas por Docker y terceros confiables."
  },
  {
    "objectID": "docker.html#c√≥mo-funciona",
    "href": "docker.html#c√≥mo-funciona",
    "title": "Docker",
    "section": "¬øC√≥mo funciona?",
    "text": "¬øC√≥mo funciona?\n\nRegistro: Creamos una cuenta en Docker Hub.\nBuscar im√°genes: Usamos docker search &lt;nombre&gt; o busca en la web.\nDescargar im√°genes: Usamos docker pull &lt;imagen&gt;, por ejemplo, docker pull nginx.\nSubir im√°genes:\n\nEtiqueta: docker tag &lt;imagen-local&gt; &lt;usuario&gt;/&lt;repositorio&gt;.\nSube: docker push &lt;usuario&gt;/&lt;repositorio&gt;.\n\nRepositorios: Organiza im√°genes en repositorios p√∫blicos (gratis) o privados (requiere plan pago)."
  },
  {
    "objectID": "docker.html#ventajas",
    "href": "docker.html#ventajas",
    "title": "Docker",
    "section": "Ventajas",
    "text": "Ventajas\n\nAlmacenamiento y descarga global.\nIm√°genes oficiales verificadas.\nAutomatizaci√≥n de im√°genes.\nColaboraci√≥n en equipo.\n\nDocker Hub es esencial para gestionar y compartir im√°genes en proyectos Docker."
  },
  {
    "objectID": "docker.html#instalar-docker-usando-el-apt-repositorio",
    "href": "docker.html#instalar-docker-usando-el-apt-repositorio",
    "title": "Docker",
    "section": "Instalar docker usando el apt repositorio",
    "text": "Instalar docker usando el apt repositorio\n\n1. Agregar la clave GPG oficial de Docker:\nEjecuta los siguientes comandos para agregar la clave GPG oficial de Docker:\n- sudo apt-get update\n- sudo apt-get install ca-certificates curl\n- sudo install -m 0755 -d /etc/apt/keyrings\n- sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc\n- sudo chmod a+r /etc/apt/keyrings/docker.asc ```\n\n\n2. Agregar el repositorio a las fuentes de Apt:\n- echo \\\n    \"deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \\\n    $(. /etc/os-release && echo \"$VERSION_CODENAME\") stable\" | \\\nsudo tee /etc/apt/sources.list.d/docker.list &gt; /dev/null\n\n- sudo apt-get update\nNota: Si utiliza una distribuci√≥n derivada de Ubuntu, como Linux Mint, es posible que necesite utilizar UBUNTU_CODENAME en lugar de VERSION_CODENAME.\n\n\nInstalar los paquetes de Docker\n- sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin\n- sudo docker run hello-world\n\n\nRevisar la version de tu docker instalado\n- sudo docker --version"
  },
  {
    "objectID": "jenkins.html",
    "href": "jenkins.html",
    "title": "Jenkins",
    "section": "",
    "text": "Diagrama de Docker"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Espacio reservado"
  },
  {
    "objectID": "indexgit.html",
    "href": "indexgit.html",
    "title": "GitHub",
    "section": "",
    "text": "MODIFICAR LA DOCUMENTACI√ìN\nGitHub es un espacio en l√≠nea donde puedo almacenar mis proyectos (repositorios), compartirlos con otras personas y colaborar. Utiliza Git para gestionar los cambios en el c√≥digo, lo que me permite trabajar junto con otros desarrolladores sin interferir en su trabajo."
  },
  {
    "objectID": "indexgit.html#qu√©-es-github",
    "href": "indexgit.html#qu√©-es-github",
    "title": "GitHub",
    "section": "¬øQu√© es GitHub?",
    "text": "¬øQu√© es GitHub?\nGitHub es una plataforma en l√≠nea que me permite guardar mis proyectos, trabajar en equipo y hacer un seguimiento de todos los cambios que se hacen en el c√≥digo. Est√° basado en Git, un sistema de control de versiones que me ayuda a gestionar todo el historial de cambios, facilitando la colaboraci√≥n sin que los errores o conflictos se presenten entre los miembros del equipo."
  },
  {
    "objectID": "indexgit.html#comandos-b√°sicos-de-git",
    "href": "indexgit.html#comandos-b√°sicos-de-git",
    "title": "GitHub",
    "section": "Comandos B√°sicos de Git",
    "text": "Comandos B√°sicos de Git\nEstos son algunos de los comandos m√°s importantes que uso para trabajar con Git y GitHub:\n\ngit init: Inicia un nuevo repositorio Git en mi directorio.\ngit status: Muestra el estado de los archivos, es decir, qu√© archivos se han modificado o agregado.\ngit add .: Agrega todos los archivos modificados para prepararlos antes de hacer un commit.\ngit commit -m \"Mensaje\": Guarda los cambios que he hecho en el repositorio con un mensaje explicativo.\ngit push: Sube los cambios que he hecho localmente al repositorio remoto en GitHub."
  },
  {
    "objectID": "indexgit.html#ramas-branches",
    "href": "indexgit.html#ramas-branches",
    "title": "GitHub",
    "section": "Ramas (Branches)",
    "text": "Ramas (Branches)\nGitHub me permite trabajar con ramas, que son versiones separadas del proyecto donde puedo hacer cambios sin afectar el trabajo principal (la rama main o master). Luego, puedo fusionar las ramas cuando los cambios est√©n listos.\n\ngit branch: Muestra las ramas que tengo en el repositorio.\ngit switch &lt;nombre_rama&gt;: Cambio de una rama a otra.\ngit merge &lt;nombre_rama&gt;: Fusiona los cambios de una rama a la actual."
  },
  {
    "objectID": "indexgit.html#colaboraci√≥n-en-github",
    "href": "indexgit.html#colaboraci√≥n-en-github",
    "title": "GitHub",
    "section": "Colaboraci√≥n en GitHub",
    "text": "Colaboraci√≥n en GitHub\nGitHub est√° dise√±ado para que pueda colaborar f√°cilmente con otros desarrolladores. Algunas herramientas importantes para la colaboraci√≥n son:\n\nPull Requests (PR): Cuando hago cambios en una rama y quiero integrarlos con la rama principal, creo un pull request. Otras personas pueden revisar y comentar mis cambios antes de fusionarlos.\nIssues: Puedo usar los issues para crear tareas, rastrear errores o sugerir nuevas funcionalidades para el proyecto."
  },
  {
    "objectID": "indexgit.html#fork-y-pull-request",
    "href": "indexgit.html#fork-y-pull-request",
    "title": "GitHub",
    "section": "Fork y Pull Request",
    "text": "Fork y Pull Request\nSi quiero contribuir a proyectos de c√≥digo abierto, puedo seguir este flujo:\n\nFork: Hago una copia del repositorio para poder modificarlo.\nPull Request: Despu√©s de hacer mis cambios, env√≠o un pull request para que los encargados del proyecto revisen y fusionen mis modificaciones."
  },
  {
    "objectID": "indexgit.html#github-actions",
    "href": "indexgit.html#github-actions",
    "title": "GitHub",
    "section": "GitHub Actions",
    "text": "GitHub Actions\nGitHub Actions me permite automatizar tareas como pruebas, compilaci√≥n y despliegue. Puedo crear flujos de trabajo autom√°ticos que se ejecutan en eventos espec√≠ficos, como cuando subo nuevos cambios al repositorio."
  },
  {
    "objectID": "indexgit.html#seguridad-y-permisos",
    "href": "indexgit.html#seguridad-y-permisos",
    "title": "GitHub",
    "section": "Seguridad y Permisos",
    "text": "Seguridad y Permisos\nEn GitHub, puedo gestionar qui√©n puede ver o modificar mis repositorios:\n\nPermisos de Repositorio: Puedo establecer qui√©n tiene acceso para ver, editar o contribuir en mi proyecto.\nBranch Protection Rules: Puedo proteger ciertas ramas para asegurarme de que los cambios solo se hagan despu√©s de pasar revisiones o pruebas."
  },
  {
    "objectID": "indexgit.html#buenas-pr√°cticas",
    "href": "indexgit.html#buenas-pr√°cticas",
    "title": "GitHub",
    "section": "Buenas Pr√°cticas",
    "text": "Buenas Pr√°cticas\nAl trabajar con Git y GitHub, es importante seguir algunas buenas pr√°cticas:\n\nHacer commits peque√±os y frecuentes para evitar conflictos.\nEscribir mensajes de commit claros que expliquen qu√© cambios se hicieron.\nMantener las ramas organizadas y nombrarlas de manera descriptiva."
  },
  {
    "objectID": "indexgit.html#conclusi√≥n",
    "href": "indexgit.html#conclusi√≥n",
    "title": "GitHub",
    "section": "Conclusi√≥n",
    "text": "Conclusi√≥n\nGitHub no es solo un lugar donde almaceno c√≥digo. Es una herramienta poderosa que me permite colaborar con otros, automatizar tareas y organizar el desarrollo de mis proyectos de manera m√°s eficiente. Aprovechando todas sus funcionalidades y siguiendo buenas pr√°cticas, puedo trabajar de manera m√°s ordenada y productiva."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Quarto",
    "section": "",
    "text": "MODIFICAR LA DOCUMENTACI√ìN"
  },
  {
    "objectID": "index.html#principales-conceptos-relacionados",
    "href": "index.html#principales-conceptos-relacionados",
    "title": "Quarto",
    "section": "Principales Conceptos Relacionados",
    "text": "Principales Conceptos Relacionados\n\nEngine (Motor)\nEn Quarto, un engine es el motor que interpreta y ejecuta el c√≥digo dentro de los documentos.\nGracias a su compatibilidad con lenguajes como R, Python y Julia, permite integrar c√≥digo que genera resultados autom√°ticamente en documentos din√°micos.\n\n\nMarkdown\nQuarto utiliza Markdown extendido para estructurar y formatear contenido. Mediante bloques y etiquetas espec√≠ficas, los usuarios pueden combinar texto enriquecido, c√≥digo y elementos interactivos en un solo archivo. Este archivo puede compilarse en formatos como PDF, HTML o presentaciones, adapt√°ndose a diferentes necesidades.\n\n\nPublish (Publicaci√≥n)\nLa publicaci√≥n en Quarto consiste en compilar documentos o proyectos completos en un formato final. Esto incluye opciones para desplegar contenido en plataformas como GitHub Pages, servidores de Shiny, o sistemas acad√©micos. Adem√°s, Quarto facilita la automatizaci√≥n del proceso de publicaci√≥n, reduciendo esfuerzos manuales.\n\n\nGit\nQuarto se integra perfectamente con Git, ofreciendo funcionalidades para colaborar en proyectos, rastrear cambios y desplegar contenido actualizado en plataformas como GitHub. Esta integraci√≥n mejora el trabajo en equipo y asegura un control detallado de versiones."
  },
  {
    "objectID": "index.html#automatizaci√≥n-en-quarto",
    "href": "index.html#automatizaci√≥n-en-quarto",
    "title": "Quarto",
    "section": "Automatizaci√≥n en Quarto",
    "text": "Automatizaci√≥n en Quarto\nLa automatizaci√≥n es uno de los pilares de Quarto. Permite ejecutar tareas recurrentes como:\n- Regeneraci√≥n de informes. \n- Actualizaci√≥n autom√°tica de gr√°ficos. \n- Despliegue de contenido en l√≠nea. \nQuarto es una soluci√≥n poderosa que busca combinar an√°lisis, visualizaci√≥n y publicaci√≥n de datos en un solo entorno din√°mico y eficiente."
  }
]