---
title: "Jenkins"
---

Jenkins es una herramienta de automatización de código abierto que utilizo principalmente para **Integración Continua (CI)** y **Entrega Continua/Despliegue Continuo (CD)**. Me ayuda a compilar, probar y desplegar software de manera eficiente. 

## Características clave
- **Plugins:** Es altamente extensible con más de 1800 plugins, lo que me permite adaptarlo a mis necesidades.
- **Pipeline as Code:** Puedo definir pipelines usando archivos como `Jenkinsfile`, lo que facilita la gestión del flujo de trabajo.
- **Compatibilidad:** Funciona con múltiples sistemas operativos y herramientas de desarrollo que uso habitualmente.
- **Automatización:** Me permite programar y ejecutar automáticamente tareas repetitivas, ahorrándome tiempo.

# Jenkins CI/CD Pipeline for Spring Boot Application

## 1. Descargar la Imagen de Docker de Jenkins
Descargamos la imagen oficial de Jenkins desde DockerHub:

boris@Dev-Final:~/Jenkins$ sudo docker pull jenkins/jenkins:lts

Ahora ejecutamos lanzamos el contenedor importante revisar los volumenes y tambien el permiso de jenkins --privileged por que ejecutara un contenedor.

boris@Dev-Final:~/Jenkins$ sudo docker run --privileged -d -p 8080:8080 -p 50000:50000 -v /var/run/docker.sock:/var/run/docker.sock -v jenkins_home:/var/jenkins_home jenkins/jenkins:lts

## 2. Crear Cuenta e Inicio Inicial
Una vez lanzado el contenedor de jenkins realizamos la instalación antes cogemos la contraseña inicial:
boris@Dev-Final:~/Jenkins$ sudo docker exec -it sharp_stonebraker cat /var/jenkins_home/secrets/initialAdminPassword
importante ponerle un nombre a nuestro contenedor que luego nos asigna uno random.

    1. Accede a Jenkins a través de `http://localhost:8080`.
    2. Recupera la contraseña inicial de administrador:
        sudo docker exec -it sharp_stonebraker cat /var/jenkins_home/secrets/initialAdminPassword
    3. Sigue el asistente de configuración:
        - Instala los complementos sugeridos o selecciona complementos específicos.
        - Crea una cuenta de administrador.
    4. Completa la configuración y accede al panel de control de Jenkins.

## 3. Instalar plugins basicós en nuestro jenkins:

    Vamos a Jenkins y instalamos los plugins necesarios.

    - Integración con Maven
    - Git
    - Estibador
    - SSH
    - Escáner SonarQube
    Por otra parte tambien instalamos el JKD y maven y Docker ya que para nuestro srping-boot nos sera necesario.
## 4. Creamos nuestro pipeline:

    Definimos nuestras tools docker git, maven y java importante revisar las versiones con las que se va atrabajar en este caso el springboot trabaja con JDK21 y Maven.

## Docker-in-Docker:

docker run -d --name jenkinsDinD --privileged -v /var/run/docker.sock:/var/run/docker.sock -v jenkins_home:/var/jenkins_home jenkins/jenkins:lts


sudo docker run --privileged -d -p 8080:8080 -p 50000:50000 -v /var/run/docker.sock:/var/run/docker.sock -v jenkins_home:/var/jenkins_home jenkins/jenkins:lts